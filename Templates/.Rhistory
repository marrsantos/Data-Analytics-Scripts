library(neuralnet)
install.packages("neuralnet")
library(neuralnet)
library(MASS)
df<-Boston
summary(df)
hist(df$medv)
dim(df)
head(df)
maxv <- apply(df, 2, max)
minv <- apply(df, 2, min)
maxv
minv
dfx <- as.data.frame.(scale(df, center=minv, scale=maxv))
dfx <- as.data.frame.(scale(df, center=minv, scale=maxv-minv))
dfx <- as.dataframe.(scale(df, center=minv, scale=maxv-minv))
dfx <- as.data.frame(scale(df, center=minv, scale=maxv-minv))
dfx
set.seed(1111)
Tdummy<-sample(2, nrow(dfx), replace=T, prob=c(.8,0.2))
dftrain<-dfx[Tdummy==1,]
dftest<-dfx[Tdummy==2,]
nrow(dftrain)
nrow(dftest)
n <- names(train_)
n <- names(dftrain)
f <- as.formula(paste("medv ~", paste(n[!n %in% "medv"], collapse = " + ")))
f
nn <- neuralnet(f,hidden=c(4,2),linear.output=T,data=dftrain)
plot(nn)
dfpred<- compute(nn, dftest[,1:13])
str(dfpred)
dfpred1<-dfpred$net.result*(max(dftest$medv)-min(dftest$medv))+min(dftest$medv)
dfactual<-dftest$medv*(max(dftest$medv)-min(dftest$medv))+min(dftest$medv)
mse<-sum((dfpred-dfactual)^2)/nrow(dftest)
dfpred1<-dfpred$net.result*(max(dftest$medv)-min(dftest$medv))+min(dftest$medv)
dfactual<-dftest$medv*(max(dftest$medv)-min(dftest$medv))+min(dftest$medv)
mse<-sum((dfpred1-dfactual)^2)/nrow(dftest)
mse
library(neuralnet)
library(MASS)
set.seed(123)
df<-Boston
library(neuralnet)
library(MASS)
set.seed(123)
df<-Boston
maxv <- apply(df, 2, max)
minv <- apply(df, 2, min)
dfx <- as.data.frame(scale(df, center=minv, scale=maxv-minv))
ind<-sample(1:nrow(dfx),400)
dftrain<-dfx[ind,]
dftest<-dfx[-ind,]
nrow(dftrain)
nrow(dftest)
n <- names(dftrain)
f <- as.formula(paste("medv ~", paste(n[!n %in% "medv"], collapse = " + ")))
nn <- neuralnet(f,hidden=c(4,2),linear.output=T,data=dftrain)
plot(nn)
dfpred<- compute(nn, dftest[,1:13])
str(dfpred)
dfpred1<-dfpred$net.result*(max(dftest$medv)-min(dftest$medv))+min(dftest$medv)
dfactual<-dftest$medv*(max(dftest$medv)-min(dftest$medv))+min(dftest$medv)
mse<-sum((dfpred1-dfactual)^2)/nrow(dftest)
mse
str(dfpred)
dfpred
dfpred1
dfpred1-dfactual
dfpred1[505]
dfpred1[505,]
dfpred1[106,]
dfactual[106,]
nrow(dfactual)
dftest$medv
str(dfactual)
dfactual[106]
dfpred1[106]
dfpred1-dfactual
library(neuralnet)
library(MASS)
set.seed(123)
df<-Boston
maxv <- apply(df, 2, max)
minv <- apply(df, 2, min)
dfx <- as.data.frame(scale(df, center=minv, scale=maxv-minv))
ind<-sample(1:nrow(dfx),400)
dftrain<-dfx[ind,]
dftest<-dfx[-ind,]
n <- names(dftrain)
f <- as.formula(paste("medv ~", paste(n[!n %in% "medv"], collapse = " + ")))
nn <- neuralnet(f,hidden=c(5,3),linear.output=T,data=dftrain)
plot(nn)
dfpred<- compute(nn, dftest[,1:13])
str(dfpred)
dfpred1<-dfpred$net.result*(max(dftest$medv)-min(dftest$medv))+min(dftest$medv)
dfactual<-dftest$medv*(max(dftest$medv)-min(dftest$medv))+min(dftest$medv)
mse<-sum((dfpred1-dfactual)^2)/nrow(dftest)
mse
str(dfpred1)
str(dfpred)
set.seed(123)
df<-Boston
maxv <- apply(df, 2, max)
minv <- apply(df, 2, min)
maxv
minv
apply(df, 2, range)
maxv <- apply(df, 2, max)
minv <- apply(df, 2, min)
minv
library(neuralnet)
library(MASS)
set.seed(123)
df<-Boston
maxv <- apply(df, 2, max)
minv <- apply(df, 2, min)
dfx <- as.data.frame(scale(df, center=minv, scale=maxv-minv))
ind<-sample(1:nrow(dfx),400)
dftrain<-dfx[ind,]
dftest<-dfx[-ind,]
n <- names(dftrain)
f <- as.formula(paste("medv ~", paste(n[!n %in% "medv"], collapse = " + ")))
f
nn <- neuralnet(f,hidden=c(4,2),linear.output=T,data=dftrain)
plot(nn)
dfpred<- compute(nn, dftest[,1:13])
dfpred
dfpred1<-dfpred$net.result*(max(dftest$medv)-min(dftest$medv))+min(dftest$medv)
dfpred[1]
dfpred[1]
dfpred$net.result[1]
dfpred1[1]
(max(dftest$medv[1])-min(dftest$medv[1]))
dftest$medv[1]
(max(dftest$medv)-min(dftest$medv))
max(dftest$medv)
min(dftest$medv)
View(dftrain)
set.seed(123)
df<-Boston
maxv <- apply(df, 2, max)
minv <- apply(df, 2, min)
maxv
minv
View(df)
dfx <- as.data.frame(scale(df, center=minv, scale=maxv-minv))
View(Dfx)
View(dfx)
0.42222222*45-5
a<-unscale(dfpred,dftest)
a<-unscale(dfpred,dftest)
str(dftest)
str(dfx)
.527/40+5
df$medv[401]
minv[401]
minv[13,401]
minv[401,13]
str(minv)
minv[14]
maxv[14]
.527/45+5
.527/45-5
5.6/45-5
5.6/45+5
df$medv[401]
dftest[1]
dftest[401]
View(dftest)
df[1,14]
dfx[1,14]
24/45+5
(24-5)/45
(x-5)/45=.422222222       x*.4222222222+5
.42222222222*45+5
(max(df$medv)-min(df$medv))
min(dft$medv)
(max(df$medv)-min(df$medv))+min(df$medv)
(max(df$medv)-min(df$medv))+min(df$medv)
set.seed(123)
df<-Boston
maxv <- apply(df, 2, max)
minv <- apply(df, 2, min)
dfx <- as.data.frame(scale(df, center=minv, scale=maxv-minv))
ind<-sample(1:nrow(dfx),400)
dftrain<-dfx[ind,]
dftest<-dfx[-ind,]
n <- names(dftrain)
f <- as.formula(paste("medv ~", paste(n[!n %in% "medv"], collapse = " + ")))
nn <- neuralnet(f,hidden=c(4,2),linear.output=T,data=dftrain)
plot(nn)
dfpred<- compute(nn, dftest[,1:13])
str(dfpred)
dfpred1<-dfpred$net.result*(max(df$medv)-min(df$medv))+min(df$medv)
dfactual<-dftest$medv*(max(df$medv)-min(df$medv))+min(df$medv)
mse<-sum((dfpred1-dfactual)^2)/nrow(dftest)
mse
View(dfpred1)
a<-dftest*(max(df$medv)-min(df$medv))+min(df$medv)
View(a)
View(dfactual)
set.seed(123)
df<-Boston
maxv <- apply(df, 2, max)
minv <- apply(df, 2, min)
dfx <- as.data.frame(scale(df, center=minv, scale=maxv-minv))
ind<-sample(1:nrow(dfx),400)
dftrain<-dfx[ind,]
dftest<-dfx[-ind,]
n <- names(dftrain)
f <- as.formula(paste("medv ~", paste(n[!n %in% "medv"], collapse = " + ")))
nn <- neuralnet(f,hidden=c(5,2),linear.output=T,data=dftrain)
plot(nn)
dfpred<- compute(nn, dftest[,1:13])
str(dfpred)
dfpred1<-dfpred$net.result*(max(df$medv)-min(df$medv))+min(df$medv)
dfactual<-dftest$medv*(max(df$medv)-min(df$medv))+min(df$medv)
mse<-sum((dfpred1-dfactual)^2)/nrow(dftest)
mse
set.seed(123)
df<-Boston
maxv <- apply(df, 2, max)
minv <- apply(df, 2, min)
dfx <- as.data.frame(scale(df, center=minv, scale=maxv-minv))
ind<-sample(1:nrow(dfx),400)
dftrain<-dfx[ind,]
dftest<-dfx[-ind,]
n <- names(dftrain)
f <- as.formula(paste("medv ~", paste(n[!n %in% "medv"], collapse = " + ")))
nn <- neuralnet(f,hidden=c(5,3),linear.output=T,data=dftrain)
plot(nn)
dfpred<- compute(nn, dftest[,1:13])
str(dfpred)
dfpred1<-dfpred$net.result*(max(df$medv)-min(df$medv))+min(df$medv)
dfactual<-dftest$medv*(max(df$medv)-min(df$medv))+min(df$medv)
mse<-sum((dfpred1-dfactual)^2)/nrow(dftest)
mse
set.seed(123)
df<-Boston
maxv <- apply(df, 2, max)
minv <- apply(df, 2, min)
dfx <- as.data.frame(scale(df, center=minv, scale=maxv-minv))
ind<-sample(1:nrow(dfx),400)
dftrain<-dfx[ind,]
dftest<-dfx[-ind,]
n <- names(dftrain)
f <- as.formula(paste("medv ~", paste(n[!n %in% "medv"], collapse = " + ")))
nn <- neuralnet(f,hidden=c(6,3),linear.output=T,data=dftrain)
plot(nn)
dfpred<- compute(nn, dftest[,1:13])
str(dfpred)
dfpred1<-dfpred$net.result*(max(df$medv)-min(df$medv))+min(df$medv)
dfactual<-dftest$medv*(max(df$medv)-min(df$medv))+min(df$medv)
mse<-sum((dfpred1-dfactual)^2)/nrow(dftest)
mse
set.seed(123)
df<-Boston
maxv <- apply(df, 2, max)
minv <- apply(df, 2, min)
dfx <- as.data.frame(scale(df, center=minv, scale=maxv-minv))
ind<-sample(1:nrow(dfx),400)
dftrain<-dfx[ind,]
dftest<-dfx[-ind,]
n <- names(dftrain)
f <- as.formula(paste("medv ~", paste(n[!n %in% "medv"], collapse = " + ")))
nn <- neuralnet(f,hidden=c(3,2),linear.output=T,data=dftrain)
plot(nn)
dfpred<- compute(nn, dftest[,1:13])
str(dfpred)
dfpred1<-dfpred$net.result*(max(df$medv)-min(df$medv))+min(df$medv)
dfactual<-dftest$medv*(max(df$medv)-min(df$medv))+min(df$medv)
mse<-sum((dfpred1-dfactual)^2)/nrow(dftest)
mse
set.seed(123)
df<-Boston
maxv <- apply(df, 2, max)
minv <- apply(df, 2, min)
dfx <- as.data.frame(scale(df, center=minv, scale=maxv-minv))
ind<-sample(1:nrow(dfx),400)
dftrain<-dfx[ind,]
dftest<-dfx[-ind,]
n <- names(dftrain)
f <- as.formula(paste("medv ~", paste(n[!n %in% "medv"], collapse = " + ")))
nn <- neuralnet(f,hidden=c(4,3),linear.output=T,data=dftrain)
plot(nn)
dfpred<- compute(nn, dftest[,1:13])
str(dfpred)
dfpred1<-dfpred$net.result*(max(df$medv)-min(df$medv))+min(df$medv)
dfactual<-dftest$medv*(max(df$medv)-min(df$medv))+min(df$medv)
mse<-sum((dfpred1-dfactual)^2)/nrow(dftest)
mse
library(caret)
install.packages("caret")
library(caret)
library(MASS)
df<-Boston
#scaling variables
maxv <- apply(df, 2, max)
minv <- apply(df, 2, min)
dfx <- as.data.frame(scale(df, center=minv, scale=maxv-minv))
#create sample - train/test
set.seed(123)
ind<-sample(1:nrow(dfx),400)
dftrain<-dfx[ind,]
dftest<-dfx[-ind,]
n <- names(dftrain)
f <- as.formula(paste("medv ~", paste(n[!n %in% "medv"], collapse = " + ")))
my.grid <- expand.grid(.decay = c(0.5, 0.1), .size = c(4, 5, 6))
my.grid
nn <- train(f, data = dftrain,
method = "nnet", maxit = 1000, tuneGrid = my.grid, trace = F, linout = 1)
plot(nn)
my.grid <- expand.grid(.decay = c(0.5, 0.1), .size = c(3, 4, 5))
nn <- train(f, data = dftrain,
method = "nnet", maxit = 1000, tuneGrid = my.grid, trace = F, linout = 1)
plot(nn)
dfpred<- predict(nn, dftest[,1:13])
str(dfpred)
dfpred1<-dfpred$net.result*(max(df$medv)-min(df$medv))+min(df$medv)
dfpred[1]
dfpred1<-dfpred*(max(df$medv)-min(df$medv))+min(df$medv)
dfactual<-dftest$medv*(max(df$medv)-min(df$medv))+min(df$medv)
mse<-sum((dfpred1-dfactual)^2)/nrow(dftest)
mse
nn
my.grid <- expand.grid(.decay = c(0.5, 0.1), .size = c(3, 4, 5, 8, 7))
nn <- train(f, data = dftrain,
method = "nnet", maxit = 1000, tuneGrid = my.grid, trace = F, linout = 1)
summary(nn)
nn
dfpred<- predict(nn, dftest[,1:13])
dfpred1<-dfpred*(max(df$medv)-min(df$medv))+min(df$medv)
dfactual<-dftest$medv*(max(df$medv)-min(df$medv))+min(df$medv)
mse<-sum((dfpred1-dfactual)^2)/nrow(dftest)
mse
rmse<-mse^-2
rmse
a<-summary(nn)
a
a$n
(a<-summary(nn))
a<-summary(nn)
a<-summary(nn)
a$n
nn
?train
?expand.grid
nn <- train(f, data = dftrain,
method = "neuralnet", maxit = 1000, tuneGrid = my.grid, trace = F, linout = 1)
my.grid <- expand.grid(.decay = c(0.5, 0.1), .size = c(3, 4, 5, 6, 7, 8, 9))
nn <- train(f, data = dftrain,
method = "nnet", maxit = 1000, tuneGrid = my.grid, trace = F, linout = 1)
# summary of processing
nn
# ANN
a<-summary(nn)
a$n
my.grid <- expand.grid(.decay = c(0.5, 0.1), .size = c(2, 3, 4, 5, 6, 7, 8))
nn <- train(f, data = dftrain,
method = "nnet", maxit = 1000, tuneGrid = my.grid, trace = F, linout = 1)
# summary of processing
nn
# ANN
a<-summary(nn)
a$n
my.grid <- expand.grid(.decay = c(0.5, 0.3, 0.1), .size = c(2, 3, 4, 5, 6, 7, 8))
nn <- train(f, data = dftrain,
method = "nnet", maxit = 1000, tuneGrid = my.grid, trace = F, linout = 1)
# summary of processing
nn
# ANN
a<-summary(nn)
a$n
dfpred<- predict(nn, dftest[,1:13])
dfpred1<-dfpred*(max(df$medv)-min(df$medv))+min(df$medv)
dfactual<-dftest$medv*(max(df$medv)-min(df$medv))+min(df$medv)
mse<-sum((dfpred1-dfactual)^2)/nrow(dftest)
mse
rmse<-mse^-2
rmse
my.grid <- expand.grid(.decay = c(0.5, 0.3, 0.1), .size = c(2, 3, 4, 5, 6, 7, 8))
set.seed(123)
nn <- train(f, data = dftrain,
method = "nnet", maxit = 1000, tuneGrid = my.grid, trace = F, linout = 1)
# summary of processing
nn
# ANN
a<-summary(nn)
a$n
dfpred<- predict(nn, dftest[,1:13])
dfpred1<-dfpred*(max(df$medv)-min(df$medv))+min(df$medv)
dfactual<-dftest$medv*(max(df$medv)-min(df$medv))+min(df$medv)
mse<-sum((dfpred1-dfactual)^2)/nrow(dftest)
mse
rmse<-mse^-2
rmse
my.grid <- expand.grid(.decay = c(0.5, 0.3, 0.1), .size = c(2, 3, 4, 5, 6, 7, 8))
set.seed(123)
nn <- train(f, data = dftrain,
method = "nnet", maxit = 1000, tuneGrid = my.grid, trace = F, linout = 1)
# summary of processing
nn
# ANN
a<-summary(nn)
a$n
dfpred<- predict(nn, dftest[,1:13])
dfpred1<-dfpred*(max(df$medv)-min(df$medv))+min(df$medv)
dfactual<-dftest$medv*(max(df$medv)-min(df$medv))+min(df$medv)
mse<-sum((dfpred1-dfactual)^2)/nrow(dftest)
mse
rmse<-mse^-2
rmse
str(nn)
# summary of processing
nn
# Load datasets
#
data_folder <- paste(getwd(), '/./datasets/', sep='')
mydata <- read.csv(file.choose(), sep=',', header=T)
# Load datasets
#
data_folder <- paste(getwd(), '/./datasets/', sep='')
# Load datasets
#
data_folder <- paste(getwd(), '/./datasets/', sep='')
mydata <- read.csv(file.choose(), sep=',', header=T)
mydata <- read.csv(paste(data_folder,"Iris.csv",sep=''), sep=',', header=T)
# Load datasets
#
data_folder <- paste(getwd(), '/./itau/', sep='')
mydata <- read.csv(paste(data_folder,"Iris.csv",sep=''), sep=',', header=T)
# Load datasets
#
data_folder <- paste(getwd(), '/./itau/', sep='')
mydata <- read.csv(paste(data_folder,"dados_Q5.csv",sep=''), sep=',', header=T)
# Load datasets
#
data_folder <- paste(getwd(), '/itau/', sep='')
mydata <- read.csv(paste(data_folder,"dados_Q5.csv",sep=''), sep=',', header=T)
data_folder
# Load datasets
#
data_folder <- paste(getwd(), '/../itau/', sep='')
mydata <- read.csv(paste(data_folder,"dados_Q5.csv",sep=''), sep=',', header=T)
data_folder
